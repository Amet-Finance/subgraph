type Bond @entity {
  id: ID!
  issuer: User!
  owner: User!
  pendingOwner: User

  uri: String!
  hash: Bytes!
  totalBonds: BigInt!
  purchased: BigInt!
  redeemed: BigInt!
  isSettled: Boolean!
  maturityPeriodInBlocks: BigInt!

  purchaseToken: ERC20!
  purchaseAmount: BigInt!

  payoutToken: ERC20!
  payoutAmount: BigInt!

  payoutBalance: BigInt!

  issuanceBlock: BigInt!
  issuanceDate: BigInt!

  purchaseRate: Int!
  earlyRedemptionRate: Int!
  referrerRewardRate: Int!

  actionLogs: [ActionLog!]! @derivedFrom(field: "bond")
  referralRecords: [ReferralRecord!]! @derivedFrom(field: "bond")
  referrerRewardsClaimed: [ReferrerRewardClaim!]! @derivedFrom(field: "bond")
}

type Vault @entity {
  id: ID! # Address of the vault
  issuanceFee: BigInt!
  issuerAddress: Bytes!
  purchaseRate: Int!
  earlyRedemptionRate: Int!
  referrerRewardRate: Int!
}

type User @entity {
  id: ID! # User's address
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "user")
  referralRecords: [ReferralRecord!]! @derivedFrom(field: "referrer")
  referrerRewardsClaimed: [ReferrerRewardClaim!]! @derivedFrom(field: "referrer")
}

type ActionLog @entity {
  id: ID! # Transaction hash of the action
  bond: Bond! # Link back to the Bond entity
  from: Bytes!, # Address initiating the action
  to: Bytes!, # Address receiving the action, or zero address for burn
  count: BigInt!, # Count transferred
  blockNumber: BigInt! # Block number where the action occurred
}

type TokenBalance @entity {
  id: ID! # Combination of user address and tokenId
  bond: Bond!
  user: User! # Reference to the User entity
  tokenId: BigInt!
  balance: BigInt!
  purchaseBlock: BigInt!
}

type ReferralRecord @entity {
  id: ID! # Transaction hash of the action
  bond: Bond!
  referrer: User!
  quantity: Int!
}

type ReferrerRewardClaim @entity {
  id: ID! # Transaction hash of the action
  bond: Bond! # Bond Address
  referrer: User! # Address of the claimer
  amount: BigInt! # Amount in Purchase token
}

type ERC20 @entity {
  id: ID! # Token address
  name: String!
  symbol: String!
  decimals: Int!
}




